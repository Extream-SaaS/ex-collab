name: dev-excollab-mediaserver

on:
  push:
    paths:
      - 'server/*'
    branches: [ dev ]

jobs:
  build:
    name: Build dev-server-collab
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: server

    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        id: docker_build_dist
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: extreamio/excollab-mediaserver:dev-${{ GITHUB_SHA }}

      - uses: act10ns/slack@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()


  deploy:
    name: Deploy dev-server-collab - GCP Compute Engine
    runs-on: ubuntu-latest
    needs: [build]
    defaults:
      run:
        working-directory: server
    steps:
      - uses: actions/checkout@v2
      - name: Extract dist
        id: Extract
        run:
          docker cp extreamio/excollab-mediaserver:dev-$(git rev-parse --short "$GITHUB_SHA"):/home/opt ./dist
      - name: Create tar of dist
        run: tar -zcvf $(git rev-parse --short "$GITHUB_SHA").tar.gz ./dist/owt 
      - uses: actions-hub/gcloud@318.0.0
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GCLOUD_CREDENTIALS}}
        with:
          args: compute scp ./dist/$(git rev-parse --short "$GITHUB_SHA").tar.gz dev-excollab-mediaserver:/home/owt/releases
      - uses: actions-hub/gcloud@318.0.0
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GCLOUD_CREDENTIALS}}
        with:
          args: compute ssh dev-excollab-mediaserver --command tar -zxvf /home/owt/releases/$(git rev-parse --short "$GITHUB_SHA").tar.gz ./ && rm /opt/owt && ln -s /home/owt/releases/$(git rev-parse --short "$GITHUB_SHA") /opt/owt
      - uses: actions-hub/gcloud@318.0.0
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GCLOUD_CREDENTIALS}}
        with:
          args: compute ssh dev-excollab-mediaserver --command rm -rf /opt/owt/management_api/cert/certificate.pfx && cp /opt/owt-cert/certificate.pfx /opt/owt/management_api/cert && rm -rf /opt/owt/management_console/cert/certificate.pfx && cp /opt/owt-cert/certificate.pfx /opt/owt/management_console/cert && rm -rf /opt/owt/webrtc_agent/cert/certificate.pfx && cp /opt/owt-cert/certificate.pfx /opt/owt/webrtc_agent/cert && rm -rf /opt/owt/portal/cert/certificate.pfx && cp /opt/owt-cert/certificate.pfx /opt/owt/portal/cert
      - uses: actions-hub/gcloud@318.0.0
        env:
          PROJECT_ID: ${{secrets.GCLOUD_PROJECT_ID}}
          APPLICATION_CREDENTIALS: ${{secrets.GCLOUD_CREDENTIALS}}
        with:
          args: compute ssh dev-excollab-mediaserver --command /opt/owt/bin/init-all.sh --deps && /opt/owt/bin/start-all.sh
      - uses: act10ns/slack@v1
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        with:
          status: ${{ job.status }}
          steps: ${{ toJson(steps) }}
        if: always()
